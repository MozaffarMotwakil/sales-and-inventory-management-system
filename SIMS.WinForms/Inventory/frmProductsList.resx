<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnReceiveGoods.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAABGdBTUEAALGPC/xhBQAAAblQTFRFAaed
        ////AKedt4teAKac1KR2ZSuO/sWn872b16V5EayiAqWb0xFYuIxf2/Lw77qX/MSlR7639/z8/8eowJNo
        AqmezZ5w67eRB6idUsG606N24q+GAKad6Pb1jNXQC5ua7/n4Pruz2qyB0O7suebj/f7+7rKU3qyDyJhz
        aa2YHqeY+MChTauXjK6X2Kh727WT5rKOFKaaJI2WbzeT/fr74LOIILGncs3G27GLL4WOfNDKJ6iZ066O
        L7atZ8jCdUKUVj+QJ3iXuoqW666Q1RpduyVhtrKREqmeeq6WZaaMqODc442v3rCFGa+lr7yku45hOaeW
        u8CmOK6fgrmkzCBhnNvXopVvpHCM3cCliUt0zayEwKZ97MWnZTKOl5BqNGaVRlOTPH6b8ez0f1ObhUyP
        XHql6uLu4dXovMbO31h135qX3FmLx+rogtLNsaV+laWCPKqaKLOqXLOhUrGg3kuBarSh6HeFxOnm/e7z
        ZmWT8L7Rw7rWw+nm1aOP2sviKaCOZJKTkFqM/8Glbpx/T2+Dqy5mi16o6e7yuqDLLaWWxKF5rdrc9fL3
        SpyVVmmBw6CR4nuioEBt3mSSG3mycwAAAmhJREFUOE+F02dX4kAYBeBknBhIIhAgEghFitKromKXtfe1
        rHXt7qrbe++9l1+87ySDxE97P3AO3IdkMnmHYf+T86DFFo3aAk76TY8JBKYGwp2CMHtHvnG9bs5AS7Bf
        FTFGCGGMBW+slf5eA4/CDGbOgkShK2AUFEzNmmoShGWb3hjg2V6IUWhVCw7rQgcvBxuHdkqigmhnBHtb
        KNj/2Ai5vDscgiUyKu0ZxAQp+Ex6kifJ5EQ2m/KDA8ngTrgJgP0D+Pvhm9XV6gsPZCw7kcxkFlKwatyj
        g2/Du0ODiVwuki9HZmbK5XjO1+x2X1qAJ+kPEDCg+EOlrxzH5SM++GyebyBx9yVVpMQAfD+CxaU2fT6u
        OwI919xkgAtt2WIoCOAKPONeZkPTtDjpTaDt158qgKvtje2nWw6eT2ucfos6OB251qGDw7SL53mHxaNZ
        66AvXziRKDhYo6BQB9tfen+MSn9bGfbT0U5pcc7hcqQtFk+Oi/iaEgkCRCT+HP0Na3DKsG29fXYLJM5Z
        C3YtbrfON2wXYS9Lx2QfejCDirdubm7ku61WzeOxw4K7371SFISEKAHPBbBqMdV7OzM5OWa3pGE9/MXX
        7yshUXYS4PTCtuvvBzJ+b24NrsC7HkrLH9aPjbcZI5egQerduS2Xy/X2RJKk+48N0NplHkc0vvhgaak6
        IknLT+k8sAHZPJEI+f1KZVQamSaTrQPWFsbnx43xV9anO0hlANbmNU89BAtBva8BODedcGpoi7AajtGi
        Blg22tOvYjhbougX5BUy0HrqANYaCw54ZW/XStR0fM2AxOmsHUo9LPsPyERYbA7RPWwAAAAASUVORK5C
        YII=
</value>
  </data>
</root>